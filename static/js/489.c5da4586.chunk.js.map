{"version":3,"file":"static/js/489.c5da4586.chunk.js","mappings":"sRAoFA,MAvEA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAIA,SAASC,EAAT,GAAoD,IAAD,IAA3BC,OAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,QAWN,OACE,+BACE,iBAAMC,SATV,SAAsBC,GACpBA,EAAEC,iBACFf,EAASgB,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAKoBS,aAAa,MAA3C,UACE,UAAC,KAAD,CAAOC,EAAE,QAAQC,GAAG,OAAOC,GAAG,IAAIC,QAAS,EAA3C,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,KAAD,CAAWC,MAAM,gBAE7B,SAAC,KAAD,CACEC,KAAK,QACLd,KAAK,QACLe,UAAQ,EACRd,MAAOP,EACPsB,SAAUlB,EACVmB,YAAY,cAIhB,UAAC,KAAD,CAAYC,KAAK,KAAjB,WACE,SAAC,KAAD,CACEC,GAAG,SACHL,KAAMtB,EAAO,OAAS,WACtByB,YAAY,iBACZjB,KAAK,WACLe,UAAQ,EACRd,MAAOL,EACPoB,SAAUlB,KAEZ,SAAC,KAAD,CAAmBsB,MAAM,SAAzB,UACE,SAAC,KAAD,CAAQC,EAAE,UAAUH,KAAK,KAAKI,QAlDtB,kBAAM7B,GAASD,IAkDvB,SACGA,EAAO,OAAS,eAKvB,SAAC,KAAD,CAAQsB,KAAK,SAASS,YAAY,OAAlC","sources":["views/LoginView/LoginView.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Stack,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  InputRightElement,\n  Button,\n} from '@chakra-ui/react';\nimport { EmailIcon } from '@chakra-ui/icons';\nimport { authOperations } from 'redux/auth';\n\nfunction LoginView() {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleClick = () => setShow(!show);\n\n  function handleChange({ target: { name, value } }) {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Stack w=\"400px\" mx=\"auto\" my=\"6\" spacing={4}>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<EmailIcon color=\"gray.300\" />}\n            />\n            <Input\n              type=\"email\"\n              name=\"email\"\n              required\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n            />\n          </InputGroup>\n\n          <InputGroup size=\"md\">\n            <Input\n              pr=\"4.5rem\"\n              type={show ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              name=\"password\"\n              required\n              value={password}\n              onChange={handleChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          <Button type=\"submit\" colorScheme=\"blue\">\n            Login\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n}\n\nexport default LoginView;\n"],"names":["dispatch","useDispatch","useState","show","setShow","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","authOperations","autoComplete","w","mx","my","spacing","pointerEvents","children","color","type","required","onChange","placeholder","size","pr","width","h","onClick","colorScheme"],"sourceRoot":""}