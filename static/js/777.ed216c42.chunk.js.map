{"version":3,"file":"static/js/777.ed216c42.chunk.js","mappings":"0SA2GA,MA7FA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAIMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACHH,EAAYG,GACZ,MACF,QACE,SAYN,OACE,+BACE,iBAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACFhB,EAASiB,EAAAA,GAAAA,SAAwB,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAKoBQ,aAAa,MAA3C,UACE,UAAC,KAAD,CAAOC,EAAE,QAAQC,GAAG,OAAOC,GAAG,IAAIC,QAAS,EAA3C,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,KAAD,CAAMC,GAAIC,EAAAA,IAAUC,MAAM,gBAEtC,SAAC,KAAD,CACEC,KAAK,OACLvB,KAAK,OACLwB,UAAQ,EACRhB,MAAOR,EACPyB,SAAUnB,EACVoB,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNC,GAAG,UAIP,UAAC,KAAD,YACE,SAAC,KAAD,CACEX,cAAc,OACdC,UAAU,SAAC,KAAD,CAAWG,MAAM,gBAE7B,SAAC,KAAD,CACEC,KAAK,QACLvB,KAAK,QACLwB,UAAQ,EACRhB,MAAON,EACPuB,SAAUnB,EACVoB,YAAY,cAIhB,UAAC,KAAD,CAAYI,KAAK,KAAjB,WACE,SAAC,KAAD,CACEC,GAAG,SACHR,KAAMzB,EAAO,OAAS,WACtB4B,YAAY,iBACZ1B,KAAK,WACLwB,UAAQ,EACRhB,MAAOJ,EACPqB,SAAUnB,KAEZ,SAAC,KAAD,CAAmB0B,MAAM,SAAzB,UACE,SAAC,KAAD,CAAQC,EAAE,UAAUH,KAAK,KAAKI,QAxEtB,kBAAMnC,GAASD,IAwEvB,SACGA,EAAO,OAAS,eAIvB,SAAC,KAAD,CAAQyB,KAAK,SAASY,YAAY,OAAlC","sources":["views/RegisterView/RegisterView.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Stack,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  InputRightElement,\n  Button,\n} from '@chakra-ui/react';\nimport { Icon, EmailIcon } from '@chakra-ui/icons';\nimport { BsPerson } from 'react-icons/bs';\nimport { authOperations } from 'redux/auth';\n\nfunction RegisterView() {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Stack w=\"400px\" mx=\"auto\" my=\"6\" spacing={4}>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<Icon as={BsPerson} color=\"gray.300\" />}\n            />\n            <Input\n              type=\"text\"\n              name=\"name\"\n              required\n              value={name}\n              onChange={handleChange}\n              placeholder=\"John Smith\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              mb=\"3\"\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<EmailIcon color=\"gray.300\" />}\n            />\n            <Input\n              type=\"email\"\n              name=\"email\"\n              required\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n            />\n          </InputGroup>\n\n          <InputGroup size=\"md\">\n            <Input\n              pr=\"4.5rem\"\n              type={show ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              name=\"password\"\n              required\n              value={password}\n              onChange={handleChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n          <Button type=\"submit\" colorScheme=\"blue\">\n            Register\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n}\n\nexport default RegisterView;\n"],"names":["dispatch","useDispatch","useState","show","setShow","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","autoComplete","w","mx","my","spacing","pointerEvents","children","as","BsPerson","color","type","required","onChange","placeholder","pattern","title","mb","size","pr","width","h","onClick","colorScheme"],"sourceRoot":""}