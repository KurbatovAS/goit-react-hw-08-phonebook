{"version":3,"file":"static/js/492.ce0413b7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItems/ContactItems.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport {\n  Stack,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  Button,\n} from '@chakra-ui/react';\nimport { Icon, PhoneIcon } from '@chakra-ui/icons';\nimport { BsPerson } from 'react-icons/bs';\nimport { createContact } from 'redux/contacts/slice';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contactsList);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const newContactName = e.target.elements.name.value;\n    const newContactNumber = e.target.elements.number.value;\n\n    if (contactСheck(newContactName)) {\n      alert(`${newContactName} is already in you contacts`);\n      return;\n    }\n\n    const newContact = {\n      name: newContactName,\n      number: newContactNumber,\n    };\n\n    addNewContact(newContact);\n\n    e.target.reset();\n  };\n\n  function addNewContact(newContact) {\n    dispatch(createContact(newContact));\n  }\n\n  function contactСheck(name) {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  }\n\n  return (\n    <form name=\"contact_form\" onSubmit={submitHandler}>\n      <Stack w=\"400px\" mx=\"auto\" my=\"6\" spacing={4}>\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<Icon as={BsPerson} color=\"gray.300\" />}\n          />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. \n            For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"John Smith\"\n          />\n        </InputGroup>\n\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<PhoneIcon color=\"gray.300\" />}\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"226-48-26\"\n          />\n        </InputGroup>\n\n        <Button type=\"submit\" colorScheme=\"blue\">\n          Add contact\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Stack, InputGroup, Input, InputLeftElement } from '@chakra-ui/react';\nimport { Icon } from '@chakra-ui/icons';\nimport { BsPerson } from 'react-icons/bs';\n\nimport { set } from 'redux/filter/slice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const Filter = useSelector(state => state.Filter);\n\n  const onFilterInputHandler = e => {\n    dispatch(set(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <Stack w=\"400px\" mx=\"auto\" my=\"6\" spacing={4}>\n      <InputGroup>\n        <InputLeftElement\n          pointerEvents=\"none\"\n          children={<Icon as={BsPerson} color=\"gray.300\" />}\n        />\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          required\n          value={Filter}\n          onInput={onFilterInputHandler}\n          placeholder=\"Find contacts by name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </InputGroup>\n    </Stack>\n  );\n}\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Button } from '@chakra-ui/react';\n\nimport { deleteContact } from 'redux/contacts/slice';\n\nfunction ContactItems({ contact }) {\n  const dispatch = useDispatch();\n\n  const { id, name, number } = contact;\n\n  return (\n    <li>\n      <Flex\n        justifyContent=\"space-between\"\n        w=\"400px\"\n        m=\"auto\"\n        alignItems=\"center\"\n        py=\"1\"\n        px=\"2\"\n        borderRadius=\"25\"\n        _hover={{\n          background: 'rgb(228, 228, 228)',\n          color: '#183e74',\n        }}\n      >\n        {name}: {number}\n        <Button\n          type=\"button\"\n          name={name}\n          py=\"1\"\n          px=\"5\"\n          borderRadius=\"25\"\n          bg=\"white\"\n          borderWidth=\"2px\"\n          borderStyle=\"solid\"\n          transition=\"all 250ms cubic-bezier(0.4, 0, 0.2, 1)\"\n          _hover={{\n            background: '#d6e0ec',\n\n            // transform: scale(1.1),\n            color: 'white',\n          }}\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </Button>\n      </Flex>\n    </li>\n  );\n}\n\nContactItems.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactItems;\n","import { useSelector } from 'react-redux';\nimport { UnorderedList } from '@chakra-ui/react';\n\nimport ContactItems from '../ContactItems';\n\nfunction ContactList() {\n  const contacts = useSelector(state => state.contacts.contactsList);\n  const filter = useSelector(state => state.filter);\n\n  function contactsFiltering() {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n\n  return (\n    <UnorderedList\n      listStyleType=\"none\"\n      color=\"#1967d2\"\n      fontSize=\"md\"\n      fontWeight=\"bold\"\n    >\n      {contactsFiltering().map(contact => {\n        return <ContactItems key={contact.id} contact={contact} />;\n      })}\n    </UnorderedList>\n  );\n}\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text } from '@chakra-ui/react';\nimport { fetchContacts } from 'redux/contacts/slice';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContacList from 'components/ContactList';\n\nfunction ContactsView() {\n  const dispatch = useDispatch();\n\n  const { contactsList, status } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <ContactForm />\n      {contactsList.length >= 2 && <Filter />}\n      {status === 'loading' && (\n        <Text color=\"gray.500\" my=\"auto\" align=\"center\">\n          Loading...\n        </Text>\n      )}\n      <ContacList />\n    </main>\n  );\n}\n\nexport default ContactsView;\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","contactsList","name","onSubmit","e","preventDefault","newContactName","target","elements","value","newContactNumber","number","find","contact","toLowerCase","alert","newContact","createContact","addNewContact","reset","w","mx","my","spacing","pointerEvents","children","as","BsPerson","color","type","pattern","title","required","placeholder","colorScheme","Filter","onInput","set","id","justifyContent","m","alignItems","py","px","borderRadius","_hover","background","bg","borderWidth","borderStyle","transition","onClick","deleteContact","filter","listStyleType","fontSize","fontWeight","includes","map","status","useEffect","fetchContacts","length","align"],"sourceRoot":""}